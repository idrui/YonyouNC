package nc.vo.pu.dw66tom20.vochange;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

import nc.bs.framework.common.NCLocator;
import nc.itf.uap.IUAPQueryBS;
import nc.jdbc.framework.processor.BeanProcessor;
import nc.vo.bd.material.MaterialVO;
import nc.vo.pf.change.ChangeVOAdjustContext;
import nc.vo.pf.change.IChangeVOAdjust;
import nc.vo.pu.m20.entity.PraybillItemVO;
import nc.vo.pu.m20.entity.PraybillVO;
import nc.vo.pub.AggregatedValueObject;
import nc.vo.pub.BusinessException;

public class ToBillForPrayAfterChg implements IChangeVOAdjust {

	@Override
	public AggregatedValueObject adjustBeforeChange(
			AggregatedValueObject srcVO, ChangeVOAdjustContext adjustContext)
			throws BusinessException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public AggregatedValueObject adjustAfterChange(AggregatedValueObject srcVO,
			AggregatedValueObject destVO, ChangeVOAdjustContext adjustContext)
			throws BusinessException {
		// TODO 自动生成的方法存根
		return null;
	}

	@Override
	public AggregatedValueObject[] batchAdjustBeforeChange(
			AggregatedValueObject[] srcVOs, ChangeVOAdjustContext adjustContext)
			throws BusinessException {
		// TODO 自动生成的方法存根
		return null;
	}

	/*
	 * 1. 根据请购单的来源单据主键查中间表里的物料编码，计量单位名称，组织，
	 * 2.通过中间件表物料编码，计量单位名称，查出对应的相关档案主键，赋值给请购单对应的字段
	 */
	@Override
	public AggregatedValueObject[] batchAdjustAfterChange(
			AggregatedValueObject[] srcVOs, AggregatedValueObject[] destVOs,
			ChangeVOAdjustContext adjustContext) throws BusinessException {
		IUAPQueryBS bs = NCLocator.getInstance().lookup(IUAPQueryBS.class);

		if (destVOs == null || destVOs.length == 0) {
			return destVOs;
		}

		PraybillVO newaggvo = new PraybillVO();
		newaggvo.setParentVO(destVOs[0].getParentVO());
		List<PraybillItemVO> newparbvos = new ArrayList<PraybillItemVO>();
		// 根据鞍钢苏万斌要求按照表体的采购申请号 和采购申请行号排下序
		Arrays.sort(destVOs, new Comparator<AggregatedValueObject>() {

			@Override
			public int compare(AggregatedValueObject a1,
					AggregatedValueObject a2) {

				String banfn = (String) a1.getChildrenVO()[0]
						.getAttributeValue("banfn");
				String banfn2 = (String) a2.getChildrenVO()[0]
						.getAttributeValue("banfn");
				int result = banfn.compareTo(banfn2);
				if (result == 0) {

					String bnfpo = (String) a1.getChildrenVO()[0]
							.getAttributeValue("bnfpo");
					String bnfpo2 = (String) a2.getChildrenVO()[0]
							.getAttributeValue("bnfpo");
					return bnfpo.compareTo(bnfpo2);
				}
				return result;
			}
		});

		for (AggregatedValueObject aggvo : destVOs) {
			PraybillItemVO[] bvos = (PraybillItemVO[]) aggvo.getChildrenVO();
			for (PraybillItemVO bvo : bvos) {
				String wucode = bvo.getPk_material();// 物料编码
				String wuname = bvo.getMaterialname();// 物料名称
				String sqlmact = "select * from bd_material where code ='"
						+ wucode + "' and nvl(dr,0)=0 " + " and name='"
						+ wuname + "'";// 物料档案
				MaterialVO matervo = (MaterialVO) bs.executeQuery(sqlmact,
						new BeanProcessor(MaterialVO.class));
				if (matervo != null) {
					bvo.setPk_material(matervo.getPk_material());// 请购单物料
					bvo.setPk_srcmaterial(matervo.getPk_material());// 请购单物料信息
					bvo.setCunitid(matervo.getPk_measdoc());// 计量单位
					bvo.setCastunitid(matervo.getPk_measdoc());// 单位
				}
				int size = 0;
				if (newparbvos != null) {
					size = newparbvos.size();
				}
				bvo.setCrowno((size + 1) + "0");// 重新赋值行号
				newparbvos.add(bvo);
			}

		}
		newaggvo.setChildrenVO(newparbvos.toArray(new PraybillItemVO[0]));
		return new AggregatedValueObject[] { newaggvo };
	}

}
